# Target executable name
TARGET = m1p1

# Object files needed for linking
OBJ = $(TARGET)_main.o $(TARGET).o

# Compilation flags for ARM assembly and C
ASFLAGS = -mcpu=xscale -alh=$*.lis -L
CFLAGS = -O0 -Wall
LDFLAGS = -g

# Cross-compiler tools for ARM architecture
CC = arm-linux-gnueabi-gcc
AS = arm-linux-gnueabi-as

# Header files to track dependencies
allhfiles = $(wildcard *.h)

# Directory containing test files
TESTDIR = test_data

.PHONY: all clean test

# Build the executable
all: $(TARGET)

# Link the object files to create the final executable
$(TARGET): $(OBJ)
	$(CC) $(LDFLAGS) -o $@ $^

# Compile the main C file with header dependency
$(TARGET)_main.o: main.c $(allhfiles)
	$(CC) -g $(CFLAGS) -o $@ -c $<

# Assemble the assembly file for ARM architecture
$(TARGET).o: $(TARGET).s
	$(AS) -g $(ASFLAGS) -o $@ $<

# Test using qemu-arm to emulate ARM architecture
test: all
	@echo "Running tests..."
	@$(MAKE) -s test_case INPUT="HELLO WORLD" EXPECT="Hello World"
	@$(MAKE) -s test_case INPUT="hello world" EXPECT="Hello World"
	@$(MAKE) -s test_case INPUT="THIS is a TeST" EXPECT="This Is A Test"
	@$(MAKE) -s test_case INPUT="already Title Case" EXPECT="Already Title Case"
	@$(MAKE) -s test_case INPUT="@hello! this#is a&test." EXPECT="@hello! This#is A&test."
	@$(MAKE) -s test_case INPUT="123abc 45def ghi78" EXPECT="123abc 45def Ghi78"
	@echo "All tests completed."

# Run a single test case
test_case:
	@echo "Testing with input: \"$(INPUT)\""
	@echo "$(INPUT)" | qemu-arm -L /usr/arm-linux-gnueabi ./$(TARGET) > result.txt
	@ACTUAL=$$(cat result.txt); \
	if [ "$$ACTUAL" = "$(EXPECT)" ]; then \
		echo "PASS: $(INPUT) -> $$ACTUAL"; \
		echo "══════════════════════════"; \
	else \
		echo "FAIL: $(INPUT) -> $$ACTUAL (expected: $(EXPECT))"; \
		exit 1; \
	fi

# Clean object files and the target executable
clean:
	rm -f *.o $(TARGET) *.lis result.txt
